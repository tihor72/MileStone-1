using System;
using System.Collections.Generic;

namespace MS_Practice_Collections
{
    public class Animal
    {
        public int AnimalId { get; set; }
        public string Name { get; set; }
        public string Type { get; set; }
        public int Age { get; set; }

        public Animal()
        {
            Name = "";
            Type = "";
        }
    }

    public class AnimalManager
    {
        private List<List<Animal>> animalGroups = new List<List<Animal>>();

        public void AddAnimal(Animal animal)
        {
            foreach (var group in animalGroups)
            {
                foreach (var a in group)
                {
                    if (a.AnimalId == animal.AnimalId)
                    {
                        Console.WriteLine("An animal with ID " + animal.AnimalId + " already exists.");
                        return;
                    }
                }
            }

            // Add to existing group by type or create new group
            foreach (var group in animalGroups)
            {
                if (group.Count > 0 && group[0].Type == animal.Type)
                {
                    group.Add(animal);
                    Console.WriteLine("Animal added to existing group.");
                    return;
                }
            }

            // Create new group
            animalGroups.Add(new List<Animal> { animal });
            Console.WriteLine("Animal added to new group.");
        }

        public void EditAnimal(int animalId, string newName, string newType, int newAge)
        {
            foreach (var group in animalGroups)
            {
                foreach (var a in group)
                {
                    if (a.AnimalId == animalId)
                    {
                        a.Name = newName;
                        a.Type = newType;
                        a.Age = newAge;
                        Console.WriteLine("Animal details updated successfully.");
                        return;
                    }
                }
            }

            Console.WriteLine("No animal found with ID " + animalId + ".");
        }

        public void SearchByName(string name)
        {
            bool found = false;
            foreach (var group in animalGroups)
            {
                foreach (var a in group)
                {
                    if (a.Name.Equals(name, StringComparison.OrdinalIgnoreCase))
                    {
                        Console.WriteLine("ID: " + a.AnimalId + ", Name: " + a.Name + ", Type: " + a.Type + ", Age: " + a.Age);
                        found = true;
                    }
                }
            }

            if (!found)
            {
                Console.WriteLine("No animal found with name '" + name + "'.");
            }
        }

        public void ListAnimals()
        {
            if (animalGroups.Count == 0)
            {
                Console.WriteLine("No animals in the list.");
                return;
            }

            Console.WriteLine("Animal List:");
            foreach (var group in animalGroups)
            {
                foreach (var a in group)
                {
                    Console.WriteLine("ID: " + a.AnimalId + ", Name: " + a.Name + ", Type: " + a.Type + ", Age: " + a.Age);
                }
            }
        }
    }

    public class Program
    {
        public static void Main(string[] args)
        {
            AnimalManager manager = new AnimalManager();
            bool exit = false;

            while (!exit)
            {
                Console.WriteLine("\nMenu:");
                Console.WriteLine("1. Add Animal");
                Console.WriteLine("2. Edit Animal by ID");
                Console.WriteLine("3. Search Animal by Name");
                Console.WriteLine("4. List All Animals");
                Console.WriteLine("5. Exit");
                Console.Write("Enter your choice: ");
                string choice = Console.ReadLine();

                switch (choice)
                {
                    case "1":
                        Console.Write("Enter Animal ID: ");
                        int id = int.Parse(Console.ReadLine());

                        Console.Write("Enter Animal Name: ");
                        string name = Console.ReadLine();

                        Console.Write("Enter Animal Type: ");
                        string type = Console.ReadLine();

                        Console.Write("Enter Animal Age: ");
                        int age = int.Parse(Console.ReadLine());

                        Animal animal = new Animal
                        {
                            AnimalId = id,
                            Name = name,
                            Type = type,
                            Age = age
                        };

                        manager.AddAnimal(animal);
                        break;

                    case "2":
                        Console.Write("Enter Animal ID to edit: ");
                        int editId = int.Parse(Console.ReadLine());

                        Console.Write("Enter new name: ");
                        string newName = Console.ReadLine();

                        Console.Write("Enter new type: ");
                        string newType = Console.ReadLine();

                        Console.Write("Enter new age: ");
                        int newAge = int.Parse(Console.ReadLine());

                        manager.EditAnimal(editId, newName, newType, newAge);
                        break;

                    case "3":
                        Console.Write("Enter name to search: ");
                        string searchName = Console.ReadLine();
                        manager.SearchByName(searchName);
                        break;

                    case "4":
                        manager.ListAnimals();
                        break;

                    case "5":
                        exit = true;
                        Console.WriteLine("Exiting program...");
                        break;

                    default:
                        Console.WriteLine("Invalid choice. Try again.");
                        break;
                }
            }
        }
    }
}





