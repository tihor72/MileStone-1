public class Program
{
    public static EmployeeManager employeeManager = new EmployeeManager();
    public static void Main(string[] args)
    {
       
            Console.WriteLine("Menu:");
            Console.WriteLine("1. Add Employee");
            Console.WriteLine("2. Display Employees");
            Console.WriteLine("3. Exit");
            Console.Write("Enter your choice: ");

            string choice = Console.ReadLine();

            switch (choice)
            {
                case "1":
                    Console.Write("Enter Employee ID: ");
                    int id = int.Parse(Console.ReadLine());

           
        Console.Write("Enter EmployeeName: ");
        string name = Console.ReadLine();
       

        Console.Write("Enter Age: ");
        int age = int.Parse(Console.ReadLine());

        Console.Write("Enter Gender: ");
        string gender = Console.ReadLine();
       

        Console.Write("Enter Phone Number: ");
        string phoneNumber = Console.ReadLine();
        
            

        Employee Employee = new Employee
        {
            EmployeeId = id,
            EmployeeName = name,
            Age = age,
            Gender = gender,
            PhoneNumber = phoneNumber,
          };

        EmployeeManager.AddEmployee(Employee);
                  
                    break;

                case "2":
                    EmployeeManager.DisplayEmployees();
                    break;

                case "3":
                    Console.WriteLine("Exiting program...");
                    return;

                default:
                    Console.WriteLine("Invalid choice, please try again.");
                    break;
            }
}

 public class EmployeeManager
    {
        public List<Employee> Employees =new List<Employee>();

        // public EmployeeManager()
        // {
        //     Employeess = new List<Employee>();
        // }

        public void AddEmployee(Employee inf)
        {
            foreach (var existingEmployee in Employees)
            {
                if (existingEmployee.EmployeeId == inf.EmployeeId)
                {
                    Console.WriteLine($"A Employees with ID {Employees.EmployeeId} already exists.");
                    return;
                }
            }

            Employees.Add(inf);
            Console.WriteLine("Employee added successfully.");
        }


        public void DisplayEmployees()
        {
            if (Employees.Count == 0)
            {
                Console.WriteLine("No Employees available.");
                return;
            }

            Console.WriteLine("Employee List:");
            foreach (var inf in Employees)
            {
                Console.WriteLine($"Employee ID: {inf.EmployeeId}, EmployeeName: {inf.EmployeeName}, Age: {inf.Age}, Gender: {inf.Gender}, Phone Number: {inf.PhoneNumber}");
            }
            }
        }
    

    public class Employee
    {
        public int EmployeeId { get; set; }
        public string EmployeeName { get; set; }
        public int Age { get; set; }
        public string Gender { get; set; }
        public string PhoneNumber { get; set; }
       
        public Employee()
        {

        }

        public void DisplayEmployeeDetails()
        {
            Console.WriteLine($"Employee ID: {EmployeeId}, EmployeeName: {EmployeeName}, Age: {Age}, Gender: {Gender}, Phone Number: {PhoneNumber}");
        }
    }
____________________________________________________________________________________________________________________________________________________________________________________________________________________

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Reflection.Metadata.Ecma335;
public class Contact{
    public int ContactId{get;set;}
    public string Name{get;set;}
    public int Age{get;set;}
    public string Gender{get;set;}
    public string PhoneNumber{get;set;}
    public string Email{get;set;}
    public void DisplayContactDetails(){
        Console.WriteLine($"Contact ID: {ContactId}, Name: {Name}, Age: {Age}, Gender: {Gender}, Phone Number: {PhoneNumber}, Email: {Email}");
    }
}
public class ContactManager{
    public List<Contact> contacts=new List<Contact>();
    public void AddContact(Contact contact){
        bool ex=false;
        foreach(Contact cn in contacts){
            if(cn.ContactId==contact.ContactId){
                Console.WriteLine($"A contact with ID {cn.ContactId} already exists.");
                ex=true;
                break;
            }

        }
        if(ex==false){
            contacts.Add(contact);
            Console.WriteLine("Contact added successfully.");
        }

    }
    public void DisplayContacts(){
       if(contacts.Count>0){
        Console.WriteLine("Contact List:");
            foreach(Contact con in contacts){
            con.DisplayContactDetails();
        }
        
       }
       else{
        Console.WriteLine("No contacts available.");
       }
    }
}
public class Program
{
    public static void Main(string[] args)
    {
        ContactManager manager=new ContactManager();
        Contact contact=new Contact(){
            ContactId=1,Name="fdufg", Age=22, Gender="fdh", PhoneNumber="fbrhfb", Email="hefbgdhy"
        };
        //manager.AddContact(contact);
        manager.DisplayContacts();
        Console.WriteLine("Exiting program...");
        Console.WriteLine("Invalid choice, please try again.");
    }
}

_____________________________________________________________________________________________________________________________________________________________________________________________________________
